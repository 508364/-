#include <QApplication>
#include <QWidget>
#include <QVBoxLayout>
#include <QLabel>
#include <QComboBox>
#include <QLineEdit>
#include <QPushButton>

class DNSConfigurationApp : public QWidget {
    Q_OBJECT

public:
    DNSConfigurationApp(QWidget *parent = nullptr) : QWidget(parent) {
        QVBoxLayout *layout = new QVBoxLayout(this);
        
        QLabel *label = new QLabel("Select a DNS server:", this);
        layout->addWidget(label);
        
        dnsComboBox = new QComboBox(this);
        defaultDNS = {
            "114.114.114.114",
            "8.8.4.4",
            "192.168.0.1",
            "8.8.8.8",
            "223.5.5.5",
            "180.76.76.76",
            "119.29.29.29",
            "101.226.4.6",
            "123.125.81.6",
            "223.6.6.6",
            "114.114.115.115"
        };
        for (const QString &dns : defaultDNS) {
            dnsComboBox->addItem(dns);
        }
        dnsComboBox->addItem("Custom");
        connect(dnsComboBox, QOverload<int>::of(&QComboBox::activated), this, &DNSConfigurationApp::handleComboBoxActivated);
        layout->addWidget(dnsComboBox);

        customDNSLineEdit = new QLineEdit(this);
        customDNSLineEdit->setPlaceholderText("Enter custom DNS server address");
        layout->addWidget(customDNSLineEdit);
        
        QPushButton *submitButton = new QPushButton("Submit", this);
        connect(submitButton, &QPushButton::clicked, this, &DNSConfigurationApp::handleSubmitButtonClicked);
        layout->addWidget(submitButton);

        selectedDNSLabel = new QLabel(this);
        layout->addWidget(selectedDNSLabel);
    }

private slots:
    void handleComboBoxActivated(int index) {
        if (index == defaultDNS.size()) {
            customDNSLineEdit->setEnabled(true);
        } else {
            customDNSLineEdit->setEnabled(false);
        }
    }

    void handleSubmitButtonClicked() {
        QString selectedDNS;
        if (dnsComboBox->currentIndex() == defaultDNS.size()) {
            selectedDNS = customDNSLineEdit->text();
        } else {
            selectedDNS = dnsComboBox->currentText();
        }
        selectedDNSLabel->setText("Selected DNS server: " + selectedDNS);
    }

private:
    QComboBox *dnsComboBox;
    QLineEdit *customDNSLineEdit;
    QLabel *selectedDNSLabel;
    QStringList defaultDNS;
};

int main(int argc, char *argv[]) {
    QApplication app(argc, argv);

    DNSConfigurationApp window;
    window.setWindowTitle("DNS Configuration");
    window.resize(400, 200);
    window.show();

    return app.exec();
}

#include "main.moc"
